
DUMPER 		> 
DUMP_INI 	>
DUMP_TAM 	>
DUMP_UL 	>
DUMP_BL 	>
DUMP_EXE 	>


& /0000

DUMPER_CONST_2        K /2
DUMPER_CONST_LD       K /8000
DUMPER_CONST_PD_DISCO K /E300
DUMPER_CONST_MAX_TAM  K /1000
DUMPER_CURRENT_BL     K /0000
DUMPER_CHECKSUM       K /0000 

;==============================================
; DUMPER
;==============================================
; Parâmetros
DUMP_INI K /0000
DUMP_TAM K /0000
DUMP_UL  K /0000
DUMP_BL  K /0000
DUMP_EXE K /0000
; Inicio da função
DUMPER K /0000

	; Cria a instrução PUT DATA
	LD DUMP_UL
	+ DUMPER_CONST_PD_DISCO
	MM DUMPER_DUMP_INI
	MM DUMPER_DUMP_TAM
	MM DUMPER_DUMP_BLOCK_INI
	MM DUMPER_DUMP_BLOCK_SIZE
	MM DUMPER_DUMP_MEM
	MM DUMPER_DUMP_BLOCK_CHECKSUM
	MM DUMPER_DUMP_EXE

	; Faz o dump do começo 
	LD DUMP_INI
	DUMPER_DUMP_INI  K /0000
	LD DUMP_TAM
	DUMPER_DUMP_TAM  K /0000

; Loop de dump
DUMPER_LOOP $ =0
	LD DUMP_TAM
	JZ DUMPER_END

; Verifica o tamanho do bloco como sendo
; min( DUMP_TAM, DUMP_BL )
	LD DUMP_TAM
	- DUMP_BL
	JN DUMPER_LOOP_BLOCK_TAM
	LD DUMP_BL
	MM DUMPER_CURRENT_BL
	JP DUMPER_LOOP_BLOCK_BEGIN
DUMPER_LOOP_BLOCK_TAM $ =0
	LD DUMP_TAM
	MM DUMPER_CURRENT_BL

; Começo do bloco
DUMPER_LOOP_BLOCK_BEGIN $ =0
	; Zera o checkcum
	LV /0
	MM DUMPER_CHECKSUM

	; Faz o dump dos valores iniciais
	LD DUMP_INI
	DUMPER_DUMP_BLOCK_INI  K /0000
	LD DUMPER_CURRENT_BL
	DUMPER_DUMP_BLOCK_SIZE K /0000

; Loop do bloco
DUMPER_LOOP_BLOCK $ =0
	; Checa fim do bloco
	LD DUMPER_CURRENT_BL
	JZ DUMPER_LOOP_BLOCK_END

	; Faz o dump do endereço
	LD DUMP_INI
	+ DUMPER_CONST_LD
	MM DUMPER_LOAD_MEM
DUMPER_LOAD_MEM K /0000
DUMPER_DUMP_MEM K /0000
	+ DUMPER_CHECKSUM
	MM DUMPER_CHECKSUM

	; Incrementa o endereço
	LD DUMP_INI
	+ DUMPER_CONST_2
	MM DUMP_INI

	; Decrementa o tamanho total
	LD DUMP_TAM
	- DUMPER_CONST_2
	MM DUMP_TAM

	; Decrementa o tamanho do bloco
	LD DUMPER_CURRENT_BL
	- DUMPER_CONST_2
	MM DUMPER_CURRENT_BL

	; Continua o loop
	JP DUMPER_LOOP_BLOCK

; Fim do bloco
DUMPER_LOOP_BLOCK_END $ =0
	LD DUMPER_CHECKSUM
	DUMPER_DUMP_BLOCK_CHECKSUM K /0000
	JP DUMPER_LOOP

; Fim do dump
DUMPER_END $ =0
	LD DUMP_EXE
	DUMPER_DUMP_EXE K /0000
RS DUMPER 

# DUMPER